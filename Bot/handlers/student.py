from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from Bot.keyboards import *
from Bot.states import *
from Bot.handlers.common import cmd_start
from DataBase.Services.auth_service import reg_student, logout_student

student_router = Router()

# ==== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –°–¢–£–î–ï–ù–¢–ê ====
@student_router.callback_query(F.data == "role_student")
async def start_student_registration(callback: CallbackQuery, state: FSMContext):
    await state.set_state(WaitCode.reg_student)
    await callback.message.answer(
        "üîë –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞:",
        reply_markup=cancel_kb()
    )
    await callback.answer()

@student_router.message(WaitCode.reg_student)
async def finish_student_registration(message: Message, state: FSMContext):
    result = await reg_student(tg_id=message.from_user.id, code=message.text.strip())
    
    if result["status"]:
        await message.answer("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        await cmd_start(message)
    else:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {result['info']}")
    
    await state.clear()

# ==== –û–¢–ü–†–ê–í–ö–ê –û–ü–†–û–°–ê ====
@student_router.callback_query(F.data == "post_que")
async def post_que(callback: CallbackQuery):
    await callback.answer("‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–ø—Ä–æ—Å–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

# ==== –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –ò–î–ï–ô ====
@student_router.callback_query(F.data == "post_idea")
async def post_idea(callback: CallbackQuery):
    await callback.answer("‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

    
# ==== –ü–†–û–°–ú–û–¢–† –†–ê–°–ü–ò–°–ê–ù–ò–Ø ====
@student_router.callback_query(F.data == "schedule")
async def post_idea(callback: CallbackQuery):
    await callback.answer("‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –ø–æ–∫–∞ —á—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

# ==== –í–´X–û–î –ò–ó –ê–ö–ö–ê–£–ù–¢–ê –°–¢–£–î–ï–ù–¢–ê ====
@student_router.callback_query(F.data == "exit_student")
async def exit_student(callback: CallbackQuery):
    result = await logout_student(tg_id=callback.from_user.id)

    if result["status"]:
        await callback.message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
        await cmd_start(callback.message)
    else:
        await callback.answer(f"‚ùå {result['info']}")

    await callback.answer()