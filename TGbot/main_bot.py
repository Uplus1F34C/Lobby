from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.client.default import DefaultBotProperties

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from TGbot.config import settings


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---------------------------------------------------------------
bot = Bot(token=settings.get_token, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---------------------------------------------------------------


# –ö–æ–º–∞–Ω–¥–∞ /start ---------------------------------------------------------------
@dp.message(Command("start"))
async def cmd_start(message: Message):
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
            text="–£–∑–Ω–∞—Ç—å —Å–≤–æ–π Tg id",
            callback_data="get_tg_id"
        )
    )

    welcome_message = ( 
        "–ü—Ä–∏–≤–µ—Ç!‚úåÔ∏è –Ø - —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –∫–≤–∞–Ω—Ç–æ—Ä–∏—É–º–∞ü§ñ\n"
        "–Ø –º–æ–≥—É:\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å \"Lobby\" - —Å–∞–π—Ç-–∏–≥—Ä—É –∫–≤–∞–Ω—Ç–æ—Ä–∏—É–º–∞üéÆ\n"
        "‚Ä¢ –ü—Ä–∏–Ω—è—Ç—å —Ç–≤–æ–π –æ–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤—Å–µ–º —É—á–µ–Ω–∏–∫–∞–º –∫–æ–Ω—Ü—Ä–µ—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø‚úçÔ∏è\n"
        "‚Ä¢ –í—ã—Å–ª—É—à–∞—Ç—å —Ç–≤–æ–∏ –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –º–µ–Ω—è –∏ LobbyüëÇ\n"
        "‚Ä¢ –£–≤–µ–¥–æ–º–∏—Ç—å —Ç–µ–±—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—ÖüóûÔ∏è\n"
        "–£–¥–∞—á–∏ —Ç–µ–±–µ –≤ –ø–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Ü–µ–ª–µ–π!üòâ"
    )
    await message.answer(
        welcome_message,
        reply_markup=builder.as_markup()
    )
# –ö–æ–º–∞–Ω–¥–∞ /start ---------------------------------------------------------------


# –ü–æ–ª—É—á–µ–Ω–µ–∏ ID ---------------------------------------------------------------
@dp.callback_query(F.data == "get_tg_id")
async def send_random_value(callback: CallbackQuery):
    await callback.message.answer(f"–í–∞—à Tg id: {callback.from_user.id}")
    await callback.answer()
# –ü–æ–ª—É—á–µ–Ω–µ–∏ ID ---------------------------------------------------------------


# –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ---------------------------------------------------------------
@dp.message()
async def handle_other_messages(message: Message):
    await message.delete()  
# –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ---------------------------------------------------------------


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---------------------------------------------------------------
async def main():
    print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.\n–ó–∞–ø—É—Å–∫...")
    await dp.start_polling(bot)

import asyncio
asyncio.run(main())
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---------------------------------------------------------------